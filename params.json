{"name":"Numberphilejs","tagline":"A library to handle numbers & number formats in javascript","body":"# numberphilejs\r\nA library to handle numbers & number formats in javascript, either on Node or in the browser\r\n\r\n## Dist ready\r\nCheck the compiled javascripts in the dist directory if you do not want to compile coffeescript by yourself\r\n\r\n## Install on node\r\n\r\n```bash\r\nnpm install numberphilejs\r\n```\r\n\r\n## Build from sources\r\nYou will need a nodejs runtime, grunt-cli for code generation and codo if you want to generate HTML docs\r\n```bash\r\nnpm install -g grunt-cli\r\nnpm install -g codo\r\n```\r\nBuild project into dist/ directory\r\n```bash\r\ngit clone git@github.com:sixpounder/numberphilejs.git\r\nnpm install && grunt\r\n```\r\n___\r\n## Numbers manipulation\r\n\r\nFollowing examples are for browser-side use.\r\n\r\n###### Number parsing\r\n```javascript\r\nN(6000).val() // -> 6000\r\nN(\"6000,\").val() // -> 6000\r\nN(\"6000,45\").val() // -> 6000.45\r\nN(\"6.000,45\").val() // -> 6000.45\r\n```\r\n\r\n###### Chainable operations\r\n```javascript\r\nN(6000).add(2000).val() // -> 8000\r\nN(6000).add(2000).add(\"1,5\").val() // -> 8001.5\r\nN(\"6000,\").subtract(2000).val() // -> 4000\r\nN(\"6000,45\").multiply(2).val() // -> 12000.9\r\nN(\"6.000\").divide('2').val() // -> 3000\r\n```\r\n\r\n###### Formatting\r\n```javascript\r\nN(6000).val('currency'); // -> 6.000,00\r\nN(6000.2).val('currency'); // -> 6.000,20\r\n```\r\n\r\nFor node environment you will find NumberphileReactor class and N wrapper function in your exports\r\n```javascript\r\nvar NumberphileReactor = require('numberphilejs').NumberphileReactor\r\nvar N = require('numberphilejs').N\r\n```\r\n\r\n## jQuery plugin\r\nTo easily integrate the library in your DOM we ship an integrated jQuery plugin. The plugin will be triggered for every item having data-numberphile=\"auto\" attribute.\r\n\r\n```html\r\n<input data-numberphile=\"auto\" data-format=\"currency\" value=\"123\"/>\r\n```\r\n\r\nThis approach will use data attributes to configure the plugin\r\n\r\n```html\r\n<input data-numberphile=\"auto\" data-currencyMaxDecimalDigits=\"2\" data-format=\"currency\" value=\"123\"/>\r\n```\r\n\r\nYou can still call it yourself\r\n\r\n```javascript\r\n$('input.currency').numerphile({\r\n    autowire: true, // Automatic binding for DOM events\r\n    currencyMaxDecimalDigits: 2,\r\n    currencyDecimalSeparator: ',',\r\n    currencyThoudandsSeparator: '.'\r\n});\r\n```\r\n\r\n## jQuery utilities\r\n\r\n### Counter\r\nA simple jQuery plugin to trigger increment step on various elements.\r\n\r\nThe plugin is automatically activated on every element having role=\"counter-trigger\" attribute, and using data attributes for configuration.\r\n\r\nTo trigger it manually:\r\n\r\n```javascript\r\n$('button.step').numberphileCounter({\r\n\tstep: 1,\r\n\ttarget: 'input.steppable'\r\n});\r\n```\r\nThe target attribute is a selector identifying the DOM elements for which the value must be changed when the element you're calling the plugin on gets clicked\r\n\r\n###### Example\r\n```html\r\n\t<input type=\"text\" class=\"steppable\" value=\"0\" />\r\n\r\n\t<button role=\"couter-trigger\" data-target=\".steppable\" data-step=\"1\"></button>\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}